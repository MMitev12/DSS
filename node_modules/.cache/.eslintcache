[{"D:\\Документи\\JAVASCRIPT cours\\Grading Project.v2\\student-gradesy\\src\\index.tsx":"1","D:\\Документи\\JAVASCRIPT cours\\Grading Project.v2\\student-gradesy\\src\\reportWebVitals.ts":"2","D:\\Документи\\JAVASCRIPT cours\\Grading Project.v2\\student-gradesy\\src\\App.tsx":"3","D:\\Документи\\JAVASCRIPT cours\\Grading Project.v2\\student-gradesy\\src\\components\\GradeList.tsx":"4","D:\\Документи\\JAVASCRIPT cours\\Grading Project.v2\\student-gradesy\\src\\components\\GradeDetails.tsx":"5"},{"size":554,"mtime":1689802791753,"results":"6","hashOfConfig":"7"},{"size":425,"mtime":1689802791539,"results":"8","hashOfConfig":"7"},{"size":2394,"mtime":1689850943131,"results":"9","hashOfConfig":"7"},{"size":1975,"mtime":1689850996742,"results":"10","hashOfConfig":"7"},{"size":3723,"mtime":1689851395452,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1r45wfp",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"D:\\Документи\\JAVASCRIPT cours\\Grading Project.v2\\student-gradesy\\src\\index.tsx",[],[],"D:\\Документи\\JAVASCRIPT cours\\Grading Project.v2\\student-gradesy\\src\\reportWebVitals.ts",[],[],"D:\\Документи\\JAVASCRIPT cours\\Grading Project.v2\\student-gradesy\\src\\App.tsx",[],[],"D:\\Документи\\JAVASCRIPT cours\\Grading Project.v2\\student-gradesy\\src\\components\\GradeList.tsx",["29"],[],"import React, { useState } from \"react\";\r\nimport { Grade } from \"../interfaces\";\r\n\r\ninterface Props {\r\n  grades: Grade[];\r\n  selectedGrade: Grade | null;\r\n  onSelectedGrade: (data: Grade) => void;\r\n  onDeletedGrade: (data: Grade[]) => void;\r\n}\r\n\r\nconst GradeList: React.FC<Props> = (props: Props) => {\r\n  const handleClick = (grade: Grade) => {\r\n    props.onSelectedGrade(grade);\r\n  };\r\n\r\n  const handleDelete = (id: number) => {\r\n    const updatedGrades = props.grades.filter((grade) => grade.id !== id);\r\n    props.onDeletedGrade(updatedGrades);\r\n  };\r\n  // deletedGrade.active = false;\r\n  // setGrade(selectedGrade);\r\n  // const updateGrades = props.grades.filter((grade) => grade.id !== id);\r\n  // props.onDeletedGrade(updateGrades);\r\n\r\n  // const getFormattedDate = (dateString: string) => {\r\n  //   const date = new Date(dateString);\r\n  //   const day = date.getDate();\r\n  //   const month = date.toLocaleString(\"default\", { month: \"long\" });\r\n  //   const year = date.getFullYear();\r\n  //   return `${month} ${day}, ${year}`;\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <h1>Grades List</h1>\r\n\r\n      {props.grades.length === 0 ? <h2>No Grades found</h2> : null}\r\n      <ul className=\"list\">\r\n        {props.grades.map((item) => (\r\n          <li\r\n            className=\"listing\"\r\n            key={item.id}\r\n            onClick={() => handleClick(item)}\r\n          >\r\n            <p className=\"id\">{item.id}</p>\r\n            <p className=\"field1\">{item.studentFirstName}</p>\r\n            <p className=\"field2\">{item.studentLastName}</p>\r\n            <p className=\"field3\">{item.subject}</p>\r\n            <p className=\"field4\">{item.gradeValue}</p>\r\n            <p className=\"field5\">{item.date.toString()}</p>\r\n            <button\r\n              className=\"deleteButton\"\r\n              onClick={() => handleDelete(item.id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GradeList;\r\n","D:\\Документи\\JAVASCRIPT cours\\Grading Project.v2\\student-gradesy\\src\\components\\GradeDetails.tsx",["30"],[],"import React, { useState, ChangeEvent, FormEvent, useEffect } from \"react\";\r\nimport { Grade } from \"../interfaces\";\r\n\r\ninterface Props {\r\n  onSave: (grade: Grade) => void;\r\n  onUpdate: (grade: Grade) => void;\r\n  selectedGrade: Grade | null;\r\n}\r\n\r\nconst GradeDetails: React.FC<Props> = (props: Props) => {\r\n  let emptyGrade: Grade = {\r\n    id: -1,\r\n    studentFirstName: \"\",\r\n    studentLastName: \"\",\r\n    subject: \"\",\r\n    gradeValue: 0,\r\n    date: new Date(),\r\n    active: true,\r\n  };\r\n\r\n  const [selectedGrade, setGrade] = useState<Grade>(emptyGrade);\r\n\r\n  useEffect(() => {\r\n    if (props.selectedGrade) {\r\n      setGrade(props.selectedGrade);\r\n    } else {\r\n      handleClear();\r\n    }\r\n  }, [props.selectedGrade]);\r\n\r\n  const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    setGrade((prevGrade) => ({\r\n      ...prevGrade,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleDateChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = e.target;\r\n    setGrade((prevGrade) => ({\r\n      ...prevGrade,\r\n      date: new Date(value),\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e: FormEvent) => {\r\n    e.preventDefault();\r\n    if (selectedGrade.id !== -1) {\r\n      props.onUpdate(selectedGrade);\r\n    } else {\r\n      props.onSave(selectedGrade);\r\n    }\r\n  };\r\n\r\n  const handleClear = () => {\r\n    setGrade(emptyGrade);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Grade Details:</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <>\r\n          <div>\r\n            <label className=\"lavel\" htmlFor=\"studentFirstName\">\r\n              Student:{\" \"}\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"field1\"\r\n              name=\"studentFirstName\"\r\n              value={selectedGrade.studentFirstName}\r\n              onChange={handleInputChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div>\r\n            <label className=\"lavel\" htmlFor=\"studentLastName\">\r\n              Student:{\" \"}\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"field2\"\r\n              name=\"studentLastName\"\r\n              value={selectedGrade.studentLastName}\r\n              onChange={handleInputChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div>\r\n            <label className=\"lavel\" htmlFor=\"subject\">\r\n              Subject:{\" \"}\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"field3\"\r\n              name=\"subject\"\r\n              value={selectedGrade.subject}\r\n              onChange={handleInputChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div>\r\n            <label className=\"lavel\" htmlFor=\"gradeValue\">\r\n              Grade:{\" \"}\r\n            </label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"field4\"\r\n              name=\"gradeValue\"\r\n              value={selectedGrade.gradeValue}\r\n              onChange={handleInputChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div>\r\n            <label className=\"lavel\" htmlFor=\"date\">\r\n              Date:{\" \"}\r\n            </label>\r\n            <input\r\n              type=\"date\"\r\n              id=\"field5\"\r\n              name=\"date\"\r\n              value={selectedGrade.date.toISOString().substr(0, 10)}\r\n              onChange={handleDateChange}\r\n              required\r\n            />\r\n          </div>\r\n          <button id=\"saveButton\" type=\"submit\">\r\n            Save\r\n          </button>\r\n          <button id=\"clearButton\" onClick={handleClear}>\r\n            Clear\r\n          </button>\r\n        </>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GradeDetails;\r\n",{"ruleId":"31","severity":1,"message":"32","line":1,"column":17,"nodeType":"33","messageId":"34","endLine":1,"endColumn":25},{"ruleId":"35","severity":1,"message":"36","line":29,"column":6,"nodeType":"37","endLine":29,"endColumn":27,"suggestions":"38"},"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleClear'. Either include it or remove the dependency array.","ArrayExpression",["39"],{"desc":"40","fix":"41"},"Update the dependencies array to be: [handleClear, props.selectedGrade]",{"range":"42","text":"43"},[696,717],"[handleClear, props.selectedGrade]"]